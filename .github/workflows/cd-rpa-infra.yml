name: cd-rpa-infra

on:
  workflow_call:
    inputs:
      git_branch_sha:
        type: string
        required: true
        description: watchman repository following the format - {org}/{repo}
      environment:
        type: string
        required: true
        description: environment. eg. dev|uat|prod
      aws_region:
        type: string
        required: true
        description: aws region
      terraform_path:
        type: string
        required: true
        description: path to terraform folder
    secrets:
      git_token:
        required: true
      role_to_assume:
        required: true
      terraform_http_credentials:
        required: true

jobs:
  review-terraform-plan:
    runs-on: ubuntu-latest
    name: Run Terraform Plan on Master
    outputs:
      tag: ${{ steps.create-tag.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: master
      - uses: aws-actions/configure-aws-credentials@v4
      # Exchanges the OIDC token (JWT) for a cloud access token.
        with:
          role-to-assume: ${{ secrets.role_to_assume }}
          aws-region: ${{ inputs.aws_region }}
      - name: "Create Terraform plan for ${{ inputs.environment }} environment"
        uses: dflook/terraform-plan@v1
        with:
          path: ${{ inputs.terraform_path }}
          var_file: "${{ inputs.terraform_path }}/environments/${{ inputs.environment }}-vars.tfvars"
          backend_config_file: "${{ inputs.terraform_path }}/environments/${{ inputs.environment }}-backend.tfvars"
          add_github_comment: false

  terraform-apply:
    needs: [ review-terraform-plan ]
    runs-on: ubuntu-latest
    name: Run Terraform Apply
    environment: ${{ inputs.environment }}
    steps:
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.role_to_assume }}
          aws-region: ${{ inputs.aws_region }}
      - name: "Apply Terraform Plan for ${{ inputs.environment }} environment"
        uses: dflook/terraform-apply@v1
        with:
          path: ${{ inputs.terraform_path }}
          var_file: "${{ inputs.terraform_path }}/environments/${{ inputs.environment }}-vars.tfvars"
          backend_config_file: "${{ inputs.terraform_path }}/environments/${{ inputs.environment }}-backend.tfvars"
          auto_approve: true