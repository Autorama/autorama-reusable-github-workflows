name: cd-automated-tests

on:
  workflow_call:
    inputs:
      watchman_repo:
        type: string
        required: true
        description: watchman repository follwing the format - {org}/{repo}
      env:
        type: string
        required: true
        description: environment. eg. dev|uat|pre-prod|prod
      aws_region:
        type: string
        required: true
        description: aws region
      s3_bucket_reports:
        type: string
        required: true
        description: aws bucket where the test reports will be exported
      test_pack_json:
        type: string
        required: true
        description: |
          test packs json.
          
          examples:
          
          [{\"tag\":\"levc\","\browser\":\"headless\"},{\"tag\":\"hub_pages\","\browser\":\"headless\"}]

          [{\"feature\":\"olaf_features\","\browser\":\"chrome\"},{\"feature\":\"wishlist_features\","\browser\":\"chrome\"}]
    secrets:
      grid_git_grid_token:
        required: true
      aws_role:
        required: true

jobs:
  run-test-pack:
    runs-on: ubuntu-latest
    # continue-on-error: true
    # These permissions are required to use Github OIDC.
    permissions:
      id-token: write
      contents: read
    strategy:
      # fail-fast: false
      matrix:
        value:
          - ${{ fromJson(inputs.test_pack_json) }}
    steps:
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.6.5
      - uses: nanasess/setup-chromedriver@v1
        with:
          chromedriver-version: '104.0.5112.79'
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ inputs.aws_region }}
          role-to-assume: ${{ secrets.aws_role }}
      - name: clone watchman repo
        run: |
          # checkout watchman repo using git
          git clone https://${{ secrets.grid_git_grid_token }}@github.com/${{ inputs.watchman_repo }}.git 
      - name: install dependencies
        run: |
          cd watchman/features
          BUNDLE_GEMFILE="${{ github.workspace }}/watchman/Gemfile"
          bundle install
      - name: run tests
        run: |
          cd watchman
          export DISPLAY=:99
          chromedriver --url-base=/wd/hub &
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
          
          date_now="$(date +%F)"
          cucumber_exit_code="0"

          if [ -z "${{ matrix.value.feature }}" ]; then
            echo "running test for tag ${{ matrix.value.tag }}"
            report_file_name="${{ matrix.value.tag }}.html"
            cucumber --tag @${{ matrix.value.tag }} ENVIRONMENT=${{ inputs.env }}	BROWSER=${{ matrix.value.browser }} --format html --out=${report_file_name} -f pretty || cucumber_exit_code="$?"
          else
            echo "running test for feature ${{ matrix.value.feature }}"
            report_file_name="${{ matrix.value.feature }}.html"
            bundle exec cucumber ${{ matrix.value.feature }} ENVIRONMENT=${{ inputs.env }} BROWSER=${{ matrix.value.browser }} --format html --out=${report_file_name} -f pretty || cucumber_exit_code="$?"
          fi

          echo "tests completed with exit code ${cucumber_exit_code}"
          
          aws s3 cp --acl public-read ${report_file_name} s3://${{ inputs.s3_bucket_reports }}/${{ inputs.env }}/${date_now}/${report_file_name}

          echo "report available at:"
          echo "https://${{ inputs.s3_bucket_reports }}.s3.${{ inputs.aws_region }}.amazonaws.com/${{ inputs.env }}/${date_now}/${report_file_name}"

          if [[ "$cucumber_exit_code" != "0" ]]; then
            exit 1
          fi
