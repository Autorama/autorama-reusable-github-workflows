name: ci-ror-workflow

on:
  workflow_call:
    inputs:
      env:
        description: "the environment"
        type: string
        required: true
      skip_artefact_caching:
        description: "set to true if there are no unit-test artefacts"
        type: boolean
        required: false
        default: false
      app:
        type: string
        required: true
    secrets:
      git_token:
        required: true

jobs:
  unit-test:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
          
      - name: Pull .env file
        run: |
          curl \
          -H "Accept: application/vnd.github.v3+json" \
          -H "Authorization: token ${{secrets.git_token}}" \
          https://api.github.com/repos/Autorama/autorama-app-config/contents/env/${{inputs.app}}/.env.ci?ref=master \
          > .tmp_curl
          response=$?
          if test "$response" != "0"; then
          	echo "the curl command failed with: $response"
          	exit 1
          else
              message="$(cat .tmp_curl | jq -r '.message')"
              echo "Here's message"
              echo $message
          	if [[ $message == "Bad credentials" ]] || [[ $message == "Not Found" ]]; then
          		echo "Error message"
          		echo $message
          		echo 'exiting'
          		exit 1
          	fi
          	cat .tmp_curl | jq -r ".content" | base64 --decode > .env
          	echo "suceeded"
          fi

          source .env
      - name: Run Unit Test
        run: |
          docker-compose -f docker-compose.ci.yml -p 123 build \
            --build-arg ENV=${{ inputs.env }} --build-arg GIT_TOKEN=${{ secrets.git_token }} \
            --build-arg CI=true web
          docker-compose -f docker-compose.ci.yml -p 123 run -u $(id -u) \
            -e HOME=/tmp -e RAILS_ENV=test web \
            bundle exec rspec --format RspecJunitFormatter --out results.xml \
            --format progress --format documentation
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        with:
          report_paths: "**/results.xml"
      - name: collect unit-test artefacts
        if: ${{ inputs.skip_artefact_caching != true }}
        run: |
          mkdir unit-test-artefacts
          cp coverage/.resultset.json unit-test-artefacts/.resultset.json
          cp coverage/coverage.json unit-test-artefacts/coverage.json
          cp results.xml unit-test-artefacts/results.xml

          ls -lah unit-test-artefacts
      - name: Cache unit-test artefacts
        if: ${{ inputs.skip_artefact_caching != true }}
        uses: actions/cache@v3
        with:
          path: unit-test-artefacts
          key: unit-test-artefacts-${{ github.run_number }}
